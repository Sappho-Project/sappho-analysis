import numpy as np
from scipy import signal
import matplotlib.pyplot as plt


def import_sanitised_data(file_path="sanitised_data.txt"):
    data = []

    with open(file_path, 'r') as file:
        lines = file.readlines()

    for line in lines:
        # Remove leading/trailing whitespace and brackets
        line = line.strip().strip('[]')
        elements = line.split(', ')

        # Convert elements to floats and append them to the data list
        data.append([float(element) for element in elements])

    return data


def normalize_data(data):
    normalized_data = []

    for arr in data:
        min_value = min(arr)
        max_value = max(arr)
        normalized_array = [(x - min_value) / (max_value - min_value) for x in arr]
        normalized_data.append(normalized_array)

    return normalized_data


def calculate_coherence(normalized_theoretical_data, normalized_sanitised_data, plot=False):
    coherences = []

    for theoretical_array in normalized_theoretical_data:
        for sanitized_array in normalized_sanitised_data:
            f, Pxy = signal.csd(theoretical_array, sanitized_array, fs=1.0, nperseg=128)
            f, Pxx = signal.csd(theoretical_array, theoretical_array, fs=1.0, nperseg=128)
            f, Pyy = signal.csd(sanitized_array, sanitized_array, fs=1.0, nperseg=128)

            coherence = np.abs(Pxy) ** 2 / (Pxx * Pyy)
            mean_coherence = np.mean(coherence)

            coherences.append(mean_coherence)

            if plot:
                plt.figure()
                plt.semilogy(f, coherence)
                plt.xlabel('Frequency [Hz]')
                plt.ylabel('Coherence')
                plt.title('Coherence between Theoretical and Sanitized Data')
                plt.grid()
                plt.close()

    return coherences


sanitised_data = import_sanitised_data()
normalized_sanitised_data = normalize_data(sanitised_data)

# Replace with actual theoretical data
theoretical_data = [[1030.5, 1021.2, 1014.6, 1092.7, 1057.9, 1028.1, 1120.0, 1255.9, 1258.5, 1262.3, 1241.9, 1276.5, 1233.7, 1316.5, 1381.5, 1400.1, 1429.3, 1432.7, 1555.8, 1606.0, 1615.2, 1610.4, 1921.6, 2016.6, 2169.1, 2189.5, 2244.9, 2632.3, 2857.8, 3062.0, 3654.4, 3938.3, 3938.1, 3937.4, 3938.3, 3937.3, 3938.7, 3939.2, 3937.9, 3938.0, 3937.5, 3938.0, 3938.2, 3938.9, 3938.1, 3938.3, 3937.1, 3938.0, 3937.1, 3938.6, 3937.5, 3938.6, 3937.6, 3939.2, 3937.9, 3938.8, 3938.4, 3938.3, 3939.1, 3938.5, 3938.7, 3936.7, 3938.6, 3937.1, 3938.1, 3936.8, 3938.1, 3937.2, 3938.4, 3937.3, 3938.9, 3937.8, 3938.1, 3937.7, 3937.9, 3937.9, 3938.1, 3938.6, 3938.6, 3937.7, 3937.5, 3937.9, 3937.9, 3881.9, 3408.5, 2639.0, 2404.8, 2254.7, 2124.0, 1894.6, 1877.3, 1595.9, 1462.6, 1440.4, 1505.4, 1372.7, 1305.5, 1214.2, 1220.5, 1213.3, 1155.9, 1222.4, 1166.9, 1117.7, 1107.5, 1030.9, 1049.6, 1059.2, 1059.5, 1078.4, 1044.5, 913.4, 990.3, 923.0, 909.8, 921.6, 949.0, 929.7, 945.1, 892.3, 877.8, 954.1, 900.6, 855.7, 940.8, 868.7, 873.5, 824.8],
                    [685.4, 698.5666666666667, 686.9333333333333, 698.7, 696.8333333333334, 694.0, 714.2, 710.2, 713.6666666666666, 719.6333333333333, 720.4, 723.8, 735.8666666666667, 726.9666666666667, 743.4333333333333, 733.0666666666667, 759.7, 745.7666666666667, 775.0333333333333, 765.6, 759.6, 753.8333333333334, 784.0333333333333, 733.2666666666667, 778.3333333333334, 763.9333333333333, 780.3, 740.4, 754.4, 772.1, 765.8333333333334, 798.3, 828.5666666666667, 791.5333333333333, 828.2666666666667, 806.5666666666667, 798.9666666666667, 832.4333333333333, 809.7333333333333, 758.0666666666667, 769.0333333333333, 816.8666666666667, 838.2, 845.9, 830.3, 837.2, 831.5666666666667, 844.7, 851.2333333333333, 832.6, 852.7666666666667, 822.4333333333333, 837.9333333333333, 825.5, 836.3, 830.7666666666667, 843.5, 833.7333333333333, 823.7333333333333, 807.7, 836.7, 868.2333333333333, 828.9333333333333, 835.2, 822.9666666666667, 819.8333333333334, 765.6, 839.1666666666666, 824.6, 742.3666666666667, 779.9333333333333, 820.7333333333333, 813.5666666666667, 810.7, 801.0333333333333, 801.7333333333333, 786.6, 803.8, 754.1, 749.4, 787.2666666666667, 789.4333333333333, 771.0666666666667, 768.0333333333333, 728.3333333333334, 703.0666666666667, 761.0333333333333, 743.4, 738.2666666666667, 735.4666666666667, 735.8666666666667, 735.8666666666667, 738.5333333333333, 726.4666666666667, 730.2, 716.1666666666666, 716.3333333333334, 675.5666666666667, 707.8666666666667, 691.6, 673.6333333333333, 691.4, 677.9333333333333, 670.9333333333333, 669.8666666666667, 656.2333333333333, 662.8, 658.2666666666667, 656.6, 650.2666666666667, 653.6666666666666, 629.0, 642.8333333333334, 635.9333333333333, 629.4333333333333, 628.7, 624.1666666666666, 599.4333333333333, 588.6, 600.2, 598.3666666666667, 573.4666666666667, 596.6, 584.0666666666667, 579.5, 570.7, 553.0, 573.0666666666667],
                    [572.6666666666666, 569.3, 588.8666666666667, 595.9666666666667, 605.4333333333333, 600.3666666666667, 601.1333333333333, 611.8666666666667, 628.1333333333333, 636.4333333333333, 636.9666666666667, 630.1666666666666, 645.2333333333333, 655.7, 670.2333333333333, 682.4666666666667, 691.8, 660.8666666666667, 685.8666666666667, 693.3, 724.2333333333333, 699.1, 762.5333333333333, 717.8, 736.6333333333333, 774.7333333333333, 786.1333333333333, 754.8, 724.1333333333333, 739.1666666666666, 818.8666666666667, 871.5666666666667, 902.6666666666666, 888.1, 933.5333333333333, 951.1333333333333, 994.9666666666667, 1023.2, 1057.1333333333334, 1034.4333333333334, 1013.0, 1145.8, 1129.1333333333334, 1122.0666666666666, 1147.1333333333334, 1225.5, 1269.0, 1289.9, 1493.9666666666667, 1524.1333333333334, 1493.9, 1580.2666666666667, 1523.0333333333333, 1547.3333333333333, 1528.3666666666666, 1514.3666666666666, 1680.0333333333333, 1669.0, 1608.9, 1738.9333333333334, 1758.0666666666666, 2100.233333333333, 1958.3666666666666, 1926.2666666666667, 1821.8, 1972.5333333333333, 2046.1, 2089.4666666666667, 2112.9333333333334, 1889.2666666666667, 1978.6333333333334, 2002.4, 2145.633333333333, 2171.6666666666665, 2068.5, 2019.5333333333333, 2051.3333333333335, 1981.0, 1714.7333333333333, 1955.9333333333334, 2092.133333333333, 1928.3333333333333, 1901.5, 1871.9333333333334, 1772.7, 1761.3333333333333, 1907.6, 1723.9666666666667, 1668.9, 1673.8333333333333, 1643.8666666666666, 1635.6, 1504.9666666666667, 1457.1, 1460.3666666666666, 1428.1333333333334, 1356.9, 1289.8666666666666, 1364.4333333333334, 1347.2, 1195.7666666666667, 1295.9, 1225.6, 1097.1333333333334, 1061.2666666666667, 1024.7666666666667, 1023.7333333333333, 938.3666666666667, 944.1333333333333, 907.3, 881.3, 867.2666666666667, 863.9666666666667, 816.3666666666667, 812.1666666666666, 765.5, 784.7666666666667, 777.0, 754.0666666666667, 736.5333333333333, 734.9666666666667, 710.0333333333333, 718.2333333333333, 681.9333333333333, 685.6333333333333, 656.3666666666667, 638.9666666666667, 633.5666666666667]]
normalized_theoretical_data = normalize_data(theoretical_data)

coherences = calculate_coherence(normalized_theoretical_data, normalized_sanitised_data, plot=True)
print(coherences)
